repository:
  name: chart-testing-orb
  description: Helm chart-testing orb
  homepage: https://github.com/bjd2385/chart-testing-orb

  # A comma-separated list of topics to set on the repository
  topics: kubernetes, helm, circleci, orb, chart-testing
  private: true
  has_issues: true
  has_projects: false
  has_wiki: false
  has_downloads: false
  default_branch: master

  allow_squash_merge: true
  allow_merge_commit: true
  allow_rebase_merge: true
  delete_branch_on_merge: true

  enable_automated_security_fixes: false
  enable_vulnerability_alerts: false

labels:
  - name: bug
    color: CC0000
    description: An issue with the system üêõ.

  - name: feature
    color: '#336699'
    description: New functionality.

#collaborators:
#    - username: blairham
#      permission: admin
#    - username: jstenquist
#      permission: admin
#
#  # Note: `permission` is only valid on organization-owned repositories.
#  # The permission to grant the collaborator. Can be one of:
#  # * `pull` - can pull, but not push to or administer this repository.
#  # * `push` - can pull and push, but not administer this repository.
#  # * `admin` - can pull, push and administer this repository.
#  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
#  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
#
# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
#teams:
#  - name: devops
#    # The permission to grant the team. Can be one of:
#    # * `pull` - can pull, but not push to or administer this repository.
#    # * `push` - can pull and push, but not administer this repository.
#    # * `admin` - can pull, push and administer this repository.
#    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
#    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
#    permission: push

branches:
  - name: master
    protection:
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 2
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch
        contexts:
          - on-commit
          #- jira-lint
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: true
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: []
        users: []
        teams: []
